static type DescriptionAttrTag = Marko.AttrTag<{
    content: Marko.Body;
}>;

export type Input = {
  iconName: string;
  command: string;
  content: Marko.Body;
  style?: Marko.CSS.Properties;
  description: string | Marko.AttrTag<{content: Marko.Body; }>;
}

<let/sectionStyle={
  "z-index": 1000,
  "background-color": "var(--color-background)",
  ...(input.style ?? {})
} as Marko.CSS.Properties />

<section class="command-section" style=sectionStyle>
  <div class="command-header">
    <h2 class="command-title">
      <icon class="command-icon" name=input.iconName/>
      <code>${input.command}</code>
    </h2>
    <p class="command-description">
      <if=typeof input.description === "string">
        ${input.description}
      </if>
      <else>
        <${input.description}/>
      </else>
    </p>
  </div>
  <${input.content}/>
</section>

<style>
  .command-section {
    padding: 2rem;
    background: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    position: relative;
    z-index: 2;
  }

  .command-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.5rem;
    margin-bottom: 2rem;

    & * {
      margin: 0;
    }
  }

  .command-icon {
    line-height: 100%;
    flex-shrink: 0;
    color: var(--color-primary);
  }

  .command-title {
    display: flex;
    align-items: center;
    gap: 0.5rem; /* Add some gap between icon and text */
    font-size: 1.4em;
    font-weight: 600;
    color: var(--color-text);
  }

  .command-description {
    font-size: 1.125rem;
    color: var(--color-text-secondary)
  }
</style>